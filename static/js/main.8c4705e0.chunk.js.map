{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","BASE_URL","a","fetch","response","json","result","FindMovie","addMovie","useState","foundMovie","setFoundMovie","setTitle","error","setError","onSubmit","event","preventDefault","some","htmlFor","type","id","placeholder","classNames","value","onChange","target","autoComplete","onClick","getMovie","then","Title","Plot","Poster","imdbID","disabled","App","setMovies","newMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"8UAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,+CCXlCG,EAAW,2C,4CAEV,WAAwBd,GAAxB,iBAAAe,EAAA,sEACkBC,MAAM,GAAD,OAAIF,EAAJ,eAAmBd,EAAnB,MADvB,cACCiB,EADD,gBAGgBA,EAASC,OAHzB,cAGCC,EAHD,yBAKEA,GALF,4C,sBCOA,IAAMC,EAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUZ,EAAa,EAAbA,OAAa,EACba,mBAAS,MADI,mBAC1CC,EAD0C,KAC9BC,EAD8B,OAEvBF,mBAAS,IAFc,mBAE1CtB,EAF0C,KAEnCyB,EAFmC,OAGvBH,mBAAS,MAHc,mBAG1CI,EAH0C,KAGnCC,EAHmC,KAsCjD,OACE,oCACE,0BACEvB,UAAU,aACVwB,SAxBe,SAACC,GACpBA,EAAMC,iBAEDrB,EAAOsB,MAAK,SAAApB,GAAK,OAAIA,EAAME,SAAWU,EAAWV,UAKpDc,EAAS,qCAJTN,EAASE,GACTC,EAAc,MACdC,EAAS,OAoBP,yBAAKrB,UAAU,SACb,2BAAOA,UAAU,QAAQ4B,QAAQ,eAAjC,eAIA,yBAAK5B,UAAU,WACb,2BACE6B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ/B,UAAWgC,IAAW,QAAS,CAAE,YAAaV,IAC9CW,MAAOrC,EACPsC,SA1BS,SAACT,GAChBA,EAAMU,OAAOF,QAAUrC,GACzB2B,EAAS,MAGXF,EAASI,EAAMU,OAAOF,QAsBZG,aAAa,UAInB,yBAAKpC,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE6B,KAAK,SACL7B,UAAU,kBACVqC,QA7DQ,YDZf,SAAP,mCCaIC,CAAS1C,GACN2C,MAAK,SAAChC,GACLa,EAAc,CACZxB,MAAOW,EAAMiC,MACb3C,YAAaU,EAAMkC,KACnB3C,OAAQS,EAAMmC,OACd3C,QAAQ,8BAAD,OAAgCQ,EAAME,QAC7CA,OAAQF,EAAMoC,cAkDZ,iBASF,yBAAK3C,UAAU,WACb,4BACE6B,KAAK,SACL7B,UAAU,oBACV4C,UAAWzB,GAHb,sBAWN,yBAAKnB,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCmB,GACC,kBAAC,EAAcA,MC3FZ0B,EAAM,WAAO,IAAD,EACK3B,mBAAS,IADd,mBAChBb,EADgB,KACRyC,EADQ,KAOvB,OACE,yBAAK9C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEK,OAAQA,KAGZ,yBAAKL,UAAU,WACb,kBAAC,EAAD,CACEiB,SAbS,SAAC8B,GAChBD,GAAU,SAAAE,GAAa,4BAAQA,GAAR,CAAuBD,QAaxC1C,OAAQA,OCjBlB4C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8c4705e0.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=52d8d4e6';\n\nexport async function getMovie(title) {\n  const response = await fetch(`${BASE_URL}&t=[${title}]`);\n\n  const result = await response.json();\n\n  return result;\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n// import Loader from 'react-loader-spinner';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie, movies }) => {\n  const [foundMovie, setFoundMovie] = useState(null);\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(null);\n\n  const searchMovie = () => {\n    getMovie(title)\n      .then((movie) => {\n        setFoundMovie({\n          title: movie.Title,\n          description: movie.Plot,\n          imgUrl: movie.Poster,\n          imdbUrl: `https://www.imdb.com/title/${movie.imdbId}`,\n          imdbId: movie.imdbID,\n        });\n      });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!movies.some(movie => movie.imdbId === foundMovie.imdbId)) {\n      addMovie(foundMovie);\n      setFoundMovie(null);\n      setTitle('');\n    } else {\n      setError('The movie is already on the list');\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.value !== title) {\n      setError(null);\n    }\n\n    setTitle(event.target.value);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              value={title}\n              onChange={handleChange}\n              autoComplete=\"off\"\n            />\n          </div>\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              disabled={!foundMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {foundMovie && (\n          <MovieCard {...foundMovie} />\n        )\n          // : (\n          //   <div className=\"loader\">\n          //     <Loader\n          //       type=\"Circles\"\n          //       color=\"purple\"\n          //       height={120}\n          //       width={120}\n          //       timeout={3000}\n          //     />\n          //   </div>\n          // )\n        }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: propTypes.func.isRequired,\n  movies: propTypes.arrayOf(propTypes.shape({\n    title: propTypes.string.isRequired,\n    description: propTypes.string.isRequired,\n    imgUrl: propTypes.string.isRequired,\n    imdbUrl: propTypes.string.isRequired,\n  }).isRequired).isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n\n  const addMovie = (newMovie) => {\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}